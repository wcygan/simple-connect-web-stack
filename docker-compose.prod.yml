version: '3.8'

# Production overrides for optimized deployment
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production  # Use production stage
    environment:
      DENO_ENV: production
      NODE_ENV: production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production  # Use production stage
    environment:
      GO_ENV: production
      GIN_MODE: release
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3007/todo.v1.TodoService/HealthCheck", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  mysql:
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password_change_me}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-tasks_db}
      MYSQL_USER: ${MYSQL_USER:-taskuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password_change_me}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER:-taskuser}", "-p${MYSQL_PASSWORD:-secure_password_change_me}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # Production database optimizations
    command: >
      --innodb-buffer-pool-size=512M
      --innodb-log-file-size=128M
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --max-connections=200
      --thread-cache-size=16
      --table-open-cache=4000
      --query-cache-type=1
      --query-cache-size=64M
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backup:/backup:ro  # For database backups
      - ./logs/mysql:/var/log/mysql  # For logging
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/mysql  # Persistent data location

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16