// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file todo/v1/todo.proto (package todo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateTaskRequest, CreateTaskResponse, DeleteTaskRequest, GetTaskRequest, GetTaskResponse, HealthCheckResponse, ListTasksRequest, ListTasksResponse, UpdateTaskRequest, UpdateTaskResponse } from "./todo_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * TodoService provides CRUD operations for tasks
 *
 * @generated from service todo.v1.TodoService
 */
export const TodoService = {
  typeName: "todo.v1.TodoService",
  methods: {
    /**
     * Create a new task
     *
     * @generated from rpc todo.v1.TodoService.CreateTask
     */
    createTask: {
      name: "CreateTask",
      I: CreateTaskRequest,
      O: CreateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific task by ID
     *
     * @generated from rpc todo.v1.TodoService.GetTask
     */
    getTask: {
      name: "GetTask",
      I: GetTaskRequest,
      O: GetTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List tasks with pagination, filtering, and search
     *
     * @generated from rpc todo.v1.TodoService.ListTasks
     */
    listTasks: {
      name: "ListTasks",
      I: ListTasksRequest,
      O: ListTasksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an existing task
     *
     * @generated from rpc todo.v1.TodoService.UpdateTask
     */
    updateTask: {
      name: "UpdateTask",
      I: UpdateTaskRequest,
      O: UpdateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a task
     *
     * @generated from rpc todo.v1.TodoService.DeleteTask
     */
    deleteTask: {
      name: "DeleteTask",
      I: DeleteTaskRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Health check endpoint
     *
     * @generated from rpc todo.v1.TodoService.HealthCheck
     */
    healthCheck: {
      name: "HealthCheck",
      I: Empty,
      O: HealthCheckResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

