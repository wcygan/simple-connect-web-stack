// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,import_extension=none"
// @generated from file todo/v1/todo.proto (package todo.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file todo/v1/todo.proto.
 */
export const file_todo_v1_todo: GenFile = /*@__PURE__*/
  fileDesc("ChJ0b2RvL3YxL3RvZG8ucHJvdG8SB3RvZG8udjEilAEKBFRhc2sSCgoCaWQYASABKAkSDQoFdGl0bGUYAiABKAkSEQoJY29tcGxldGVkGAMgASgIEi4KCmNyZWF0ZWRfYXQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIiIKEUNyZWF0ZVRhc2tSZXF1ZXN0Eg0KBXRpdGxlGAEgASgJIjEKEkNyZWF0ZVRhc2tSZXNwb25zZRIbCgR0YXNrGAEgASgLMg0udG9kby52MS5UYXNrIhwKDkdldFRhc2tSZXF1ZXN0EgoKAmlkGAEgASgJIi4KD0dldFRhc2tSZXNwb25zZRIbCgR0YXNrGAEgASgLMg0udG9kby52MS5UYXNrIrYBChBMaXN0VGFza3NSZXF1ZXN0EgwKBHBhZ2UYASABKA0SEQoJcGFnZV9zaXplGAIgASgNEg0KBXF1ZXJ5GAMgASgJEiUKBnN0YXR1cxgEIAEoDjIVLnRvZG8udjEuU3RhdHVzRmlsdGVyEiMKB3NvcnRfYnkYBSABKA4yEi50b2RvLnYxLlNvcnRGaWVsZBImCgpzb3J0X29yZGVyGAYgASgOMhIudG9kby52MS5Tb3J0T3JkZXIiYgoRTGlzdFRhc2tzUmVzcG9uc2USHAoFdGFza3MYASADKAsyDS50b2RvLnYxLlRhc2sSLwoKcGFnaW5hdGlvbhgCIAEoCzIbLnRvZG8udjEuUGFnaW5hdGlvbk1ldGFkYXRhIocBChJQYWdpbmF0aW9uTWV0YWRhdGESDAoEcGFnZRgBIAEoDRIRCglwYWdlX3NpemUYAiABKA0SEwoLdG90YWxfcGFnZXMYAyABKA0SEwoLdG90YWxfaXRlbXMYBCABKA0SFAoMaGFzX3ByZXZpb3VzGAUgASgIEhAKCGhhc19uZXh0GAYgASgIIkEKEVVwZGF0ZVRhc2tSZXF1ZXN0EgoKAmlkGAEgASgJEg0KBXRpdGxlGAIgASgJEhEKCWNvbXBsZXRlZBgDIAEoCCIxChJVcGRhdGVUYXNrUmVzcG9uc2USGwoEdGFzaxgBIAEoCzINLnRvZG8udjEuVGFzayIfChFEZWxldGVUYXNrUmVxdWVzdBIKCgJpZBgBIAEoCSIlChNIZWFsdGhDaGVja1Jlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCSp8CgxTdGF0dXNGaWx0ZXISHQoZU1RBVFVTX0ZJTFRFUl9VTlNQRUNJRklFRBAAEhUKEVNUQVRVU19GSUxURVJfQUxMEAESGwoXU1RBVFVTX0ZJTFRFUl9DT01QTEVURUQQAhIZChVTVEFUVVNfRklMVEVSX1BFTkRJTkcQAypzCglTb3J0RmllbGQSGgoWU09SVF9GSUVMRF9VTlNQRUNJRklFRBAAEhkKFVNPUlRfRklFTERfQ1JFQVRFRF9BVBABEhkKFVNPUlRfRklFTERfVVBEQVRFRF9BVBACEhQKEFNPUlRfRklFTERfVElUTEUQAypQCglTb3J0T3JkZXISGgoWU09SVF9PUkRFUl9VTlNQRUNJRklFRBAAEhIKDlNPUlRfT1JERVJfQVNDEAESEwoPU09SVF9PUkRFUl9ERVNDEAIypAMKC1RvZG9TZXJ2aWNlEkUKCkNyZWF0ZVRhc2sSGi50b2RvLnYxLkNyZWF0ZVRhc2tSZXF1ZXN0GhsudG9kby52MS5DcmVhdGVUYXNrUmVzcG9uc2USPAoHR2V0VGFzaxIXLnRvZG8udjEuR2V0VGFza1JlcXVlc3QaGC50b2RvLnYxLkdldFRhc2tSZXNwb25zZRJCCglMaXN0VGFza3MSGS50b2RvLnYxLkxpc3RUYXNrc1JlcXVlc3QaGi50b2RvLnYxLkxpc3RUYXNrc1Jlc3BvbnNlEkUKClVwZGF0ZVRhc2sSGi50b2RvLnYxLlVwZGF0ZVRhc2tSZXF1ZXN0GhsudG9kby52MS5VcGRhdGVUYXNrUmVzcG9uc2USQAoKRGVsZXRlVGFzaxIaLnRvZG8udjEuRGVsZXRlVGFza1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSQwoLSGVhbHRoQ2hlY2sSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaHC50b2RvLnYxLkhlYWx0aENoZWNrUmVzcG9uc2VCnQEKC2NvbS50b2RvLnYxQglUb2RvUHJvdG9QAVpGZ2l0aHViLmNvbS93Y3lnYW4vc2ltcGxlLWNvbm5lY3Qtd2ViLXN0YWNrL2ludGVybmFsL2dlbi90b2RvL3YxO3RvZG92MaICA1RYWKoCB1RvZG8uVjHKAgdUb2RvXFYx4gITVG9kb1xWMVxHUEJNZXRhZGF0YeoCCFRvZG86OlYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_protobuf_empty]);

/**
 * Task represents a todo item
 *
 * @generated from message todo.v1.Task
 */
export type Task = Message<"todo.v1.Task"> & {
  /**
   * UUID v4
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Task title (max 255 chars)
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Completion status
   *
   * @generated from field: bool completed = 3;
   */
  completed: boolean;

  /**
   * Creation timestamp
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * Last update timestamp
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message todo.v1.Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 0);

/**
 * CreateTaskRequest contains the data needed to create a new task
 *
 * @generated from message todo.v1.CreateTaskRequest
 */
export type CreateTaskRequest = Message<"todo.v1.CreateTaskRequest"> & {
  /**
   * Required, max 255 chars
   *
   * @generated from field: string title = 1;
   */
  title: string;
};

/**
 * Describes the message todo.v1.CreateTaskRequest.
 * Use `create(CreateTaskRequestSchema)` to create a new message.
 */
export const CreateTaskRequestSchema: GenMessage<CreateTaskRequest> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 1);

/**
 * CreateTaskResponse returns the newly created task
 *
 * @generated from message todo.v1.CreateTaskResponse
 */
export type CreateTaskResponse = Message<"todo.v1.CreateTaskResponse"> & {
  /**
   * @generated from field: todo.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message todo.v1.CreateTaskResponse.
 * Use `create(CreateTaskResponseSchema)` to create a new message.
 */
export const CreateTaskResponseSchema: GenMessage<CreateTaskResponse> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 2);

/**
 * GetTaskRequest identifies which task to retrieve
 *
 * @generated from message todo.v1.GetTaskRequest
 */
export type GetTaskRequest = Message<"todo.v1.GetTaskRequest"> & {
  /**
   * Task UUID
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message todo.v1.GetTaskRequest.
 * Use `create(GetTaskRequestSchema)` to create a new message.
 */
export const GetTaskRequestSchema: GenMessage<GetTaskRequest> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 3);

/**
 * GetTaskResponse returns the requested task
 *
 * @generated from message todo.v1.GetTaskResponse
 */
export type GetTaskResponse = Message<"todo.v1.GetTaskResponse"> & {
  /**
   * @generated from field: todo.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message todo.v1.GetTaskResponse.
 * Use `create(GetTaskResponseSchema)` to create a new message.
 */
export const GetTaskResponseSchema: GenMessage<GetTaskResponse> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 4);

/**
 * ListTasksRequest contains filters and pagination options
 *
 * @generated from message todo.v1.ListTasksRequest
 */
export type ListTasksRequest = Message<"todo.v1.ListTasksRequest"> & {
  /**
   * Pagination
   *
   * Page number (1-based), default: 1
   *
   * @generated from field: uint32 page = 1;
   */
  page: number;

  /**
   * Items per page, default: 20, max: 100
   *
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * Filters
   *
   * Search in title
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * Filter by completion status
   *
   * @generated from field: todo.v1.StatusFilter status = 4;
   */
  status: StatusFilter;

  /**
   * Sorting
   *
   * Field to sort by
   *
   * @generated from field: todo.v1.SortField sort_by = 5;
   */
  sortBy: SortField;

  /**
   * Sort direction
   *
   * @generated from field: todo.v1.SortOrder sort_order = 6;
   */
  sortOrder: SortOrder;
};

/**
 * Describes the message todo.v1.ListTasksRequest.
 * Use `create(ListTasksRequestSchema)` to create a new message.
 */
export const ListTasksRequestSchema: GenMessage<ListTasksRequest> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 5);

/**
 * ListTasksResponse returns paginated tasks
 *
 * @generated from message todo.v1.ListTasksResponse
 */
export type ListTasksResponse = Message<"todo.v1.ListTasksResponse"> & {
  /**
   * @generated from field: repeated todo.v1.Task tasks = 1;
   */
  tasks: Task[];

  /**
   * @generated from field: todo.v1.PaginationMetadata pagination = 2;
   */
  pagination?: PaginationMetadata;
};

/**
 * Describes the message todo.v1.ListTasksResponse.
 * Use `create(ListTasksResponseSchema)` to create a new message.
 */
export const ListTasksResponseSchema: GenMessage<ListTasksResponse> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 6);

/**
 * PaginationMetadata provides pagination information
 *
 * @generated from message todo.v1.PaginationMetadata
 */
export type PaginationMetadata = Message<"todo.v1.PaginationMetadata"> & {
  /**
   * Current page
   *
   * @generated from field: uint32 page = 1;
   */
  page: number;

  /**
   * Items per page
   *
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * Total number of pages
   *
   * @generated from field: uint32 total_pages = 3;
   */
  totalPages: number;

  /**
   * Total number of items
   *
   * @generated from field: uint32 total_items = 4;
   */
  totalItems: number;

  /**
   * Whether there's a previous page
   *
   * @generated from field: bool has_previous = 5;
   */
  hasPrevious: boolean;

  /**
   * Whether there's a next page
   *
   * @generated from field: bool has_next = 6;
   */
  hasNext: boolean;
};

/**
 * Describes the message todo.v1.PaginationMetadata.
 * Use `create(PaginationMetadataSchema)` to create a new message.
 */
export const PaginationMetadataSchema: GenMessage<PaginationMetadata> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 7);

/**
 * UpdateTaskRequest contains the task update data
 *
 * @generated from message todo.v1.UpdateTaskRequest
 */
export type UpdateTaskRequest = Message<"todo.v1.UpdateTaskRequest"> & {
  /**
   * Task UUID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * New title (optional)
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * New completion status
   *
   * @generated from field: bool completed = 3;
   */
  completed: boolean;
};

/**
 * Describes the message todo.v1.UpdateTaskRequest.
 * Use `create(UpdateTaskRequestSchema)` to create a new message.
 */
export const UpdateTaskRequestSchema: GenMessage<UpdateTaskRequest> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 8);

/**
 * UpdateTaskResponse returns the updated task
 *
 * @generated from message todo.v1.UpdateTaskResponse
 */
export type UpdateTaskResponse = Message<"todo.v1.UpdateTaskResponse"> & {
  /**
   * @generated from field: todo.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message todo.v1.UpdateTaskResponse.
 * Use `create(UpdateTaskResponseSchema)` to create a new message.
 */
export const UpdateTaskResponseSchema: GenMessage<UpdateTaskResponse> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 9);

/**
 * DeleteTaskRequest identifies which task to delete
 *
 * @generated from message todo.v1.DeleteTaskRequest
 */
export type DeleteTaskRequest = Message<"todo.v1.DeleteTaskRequest"> & {
  /**
   * Task UUID
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message todo.v1.DeleteTaskRequest.
 * Use `create(DeleteTaskRequestSchema)` to create a new message.
 */
export const DeleteTaskRequestSchema: GenMessage<DeleteTaskRequest> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 10);

/**
 * HealthCheckResponse indicates service health
 *
 * @generated from message todo.v1.HealthCheckResponse
 */
export type HealthCheckResponse = Message<"todo.v1.HealthCheckResponse"> & {
  /**
   * "ok" when healthy
   *
   * @generated from field: string status = 1;
   */
  status: string;
};

/**
 * Describes the message todo.v1.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export const HealthCheckResponseSchema: GenMessage<HealthCheckResponse> = /*@__PURE__*/
  messageDesc(file_todo_v1_todo, 11);

/**
 * StatusFilter options for task filtering
 *
 * @generated from enum todo.v1.StatusFilter
 */
export enum StatusFilter {
  /**
   * @generated from enum value: STATUS_FILTER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_FILTER_ALL = 1;
   */
  ALL = 1,

  /**
   * @generated from enum value: STATUS_FILTER_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: STATUS_FILTER_PENDING = 3;
   */
  PENDING = 3,
}

/**
 * Describes the enum todo.v1.StatusFilter.
 */
export const StatusFilterSchema: GenEnum<StatusFilter> = /*@__PURE__*/
  enumDesc(file_todo_v1_todo, 0);

/**
 * SortField options for task sorting
 *
 * @generated from enum todo.v1.SortField
 */
export enum SortField {
  /**
   * @generated from enum value: SORT_FIELD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SORT_FIELD_CREATED_AT = 1;
   */
  CREATED_AT = 1,

  /**
   * @generated from enum value: SORT_FIELD_UPDATED_AT = 2;
   */
  UPDATED_AT = 2,

  /**
   * @generated from enum value: SORT_FIELD_TITLE = 3;
   */
  TITLE = 3,
}

/**
 * Describes the enum todo.v1.SortField.
 */
export const SortFieldSchema: GenEnum<SortField> = /*@__PURE__*/
  enumDesc(file_todo_v1_todo, 1);

/**
 * SortOrder options
 *
 * @generated from enum todo.v1.SortOrder
 */
export enum SortOrder {
  /**
   * @generated from enum value: SORT_ORDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SORT_ORDER_ASC = 1;
   */
  ASC = 1,

  /**
   * @generated from enum value: SORT_ORDER_DESC = 2;
   */
  DESC = 2,
}

/**
 * Describes the enum todo.v1.SortOrder.
 */
export const SortOrderSchema: GenEnum<SortOrder> = /*@__PURE__*/
  enumDesc(file_todo_v1_todo, 2);

/**
 * TodoService provides CRUD operations for tasks
 *
 * @generated from service todo.v1.TodoService
 */
export const TodoService: GenService<{
  /**
   * Create a new task
   *
   * @generated from rpc todo.v1.TodoService.CreateTask
   */
  createTask: {
    methodKind: "unary";
    input: typeof CreateTaskRequestSchema;
    output: typeof CreateTaskResponseSchema;
  },
  /**
   * Get a specific task by ID
   *
   * @generated from rpc todo.v1.TodoService.GetTask
   */
  getTask: {
    methodKind: "unary";
    input: typeof GetTaskRequestSchema;
    output: typeof GetTaskResponseSchema;
  },
  /**
   * List tasks with pagination, filtering, and search
   *
   * @generated from rpc todo.v1.TodoService.ListTasks
   */
  listTasks: {
    methodKind: "unary";
    input: typeof ListTasksRequestSchema;
    output: typeof ListTasksResponseSchema;
  },
  /**
   * Update an existing task
   *
   * @generated from rpc todo.v1.TodoService.UpdateTask
   */
  updateTask: {
    methodKind: "unary";
    input: typeof UpdateTaskRequestSchema;
    output: typeof UpdateTaskResponseSchema;
  },
  /**
   * Delete a task
   *
   * @generated from rpc todo.v1.TodoService.DeleteTask
   */
  deleteTask: {
    methodKind: "unary";
    input: typeof DeleteTaskRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Health check endpoint
   *
   * @generated from rpc todo.v1.TodoService.HealthCheck
   */
  healthCheck: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof HealthCheckResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_todo_v1_todo, 0);

